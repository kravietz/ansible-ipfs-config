---
- name: Init ipfs user
  ansible.builtin.user:
    name: ipfs
    home: "{{ ipfs_home }}"
    password_lock: true

- name: Ensure ipfs config directory
  ansible.builtin.file:
    dest: "{{ ipfs_home }}/.ipfs"
    owner: ipfs
    group: ipfs
    mode: 0750
    state: directory

- name: Config absent - ipfs init
  become: true
  become_user: ipfs
  ansible.builtin.command: "/usr/local/bin/ipfs init --empty-repo"
  args:
    chdir: "{{ ipfs_home }}"
    creates: "{{ ipfs_home }}/.ipfs/config.json"
  when: hostvars[inventory_hostname]['ipfs_config'] is not defined

- name: Config present - build ipfs config
  when: hostvars[inventory_hostname]['ipfs_config'] is defined
  block:
    - name: Combine user config with default config
      ansible.builtin.set_fact:
        ipfs_config_combined: "{{ ipfs_config_default | default({}) | combine (hostvars[inventory_hostname]['ipfs_config'], recursive=True) }}"

    - name: Debug merged config
      ansible.builtin.debug: var=ipfs_config_combined
      when: ipfs_config_debug

    - name: Check if ipfs keys were defined
      ansible.builtin.assert:
        that:
          - ipfs_config_combined.Identity.PeerID is defined
          - ipfs_config_combined.Identity.PrivKey is defined
        fail_msg: "`ipfs_config.Identity.PeerID` and `ipfs_config.Identity.PeerID` must be defined."

    - name: Write ipfs config
      ansible.builtin.copy:
        dest: "{{ ipfs_home }}/.ipfs/config"
        content: "{{ ipfs_config_combined | to_nice_json }}"
        owner: ipfs
        group: ipfs
        mode: 0640
      notify:
        - Ipfs restart

- name: Ipfs service file
  ansible.builtin.template:
    src: templates/ipfs/service.j2
    dest: /etc/systemd/system/ipfs.service
    owner: root
    group: root
    mode: 0644

- name: Ipfs apparmor profile
  when: use_apparmor
  ansible.builtin.template:
    src: templates/ipfs/apparmor.j2
    dest: /etc/apparmor.d/ipfs
    owner: root
    group: root
    mode: 0644
  notify:
    - Load ipfs apparmor

- name: Ipfs service
  tags: molecule-notest
  ansible.builtin.service:
    name: ipfs
    state: "{{ ipfs_service_state }}"
    enabled: "{{ ipfs_service_enabled }}"
